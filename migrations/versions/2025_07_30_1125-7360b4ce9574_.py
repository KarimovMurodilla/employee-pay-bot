"""

Revision ID: 7360b4ce9574
Revises:
Create Date: 2025-07-30 11:25:44.331465

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7360b4ce9574"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "departments",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_departments")),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column(
            "role",
            sa.Enum("EMPLOYEE", "ESTABLISHMENT", "ADMIN", name="userrole"),
            nullable=False,
        ),
        sa.Column("department_id", sa.BigInteger(), nullable=True),
        sa.Column("balance", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("daily_limit", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("monthly_limit", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
            name=op.f("fk_users_department_id_departments"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("telegram_id", name=op.f("uq_users_telegram_id")),
    )
    op.create_index("idx_users_department", "users", ["department_id"], unique=False)
    op.create_index("idx_users_role", "users", ["role"], unique=False)
    op.create_index("idx_users_telegram_id", "users", ["telegram_id"], unique=False)
    op.create_table(
        "establishments",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("qr_code", sa.String(length=255), nullable=False),
        sa.Column("owner_user_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "max_order_amount", sa.Numeric(precision=15, scale=2), nullable=False
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_user_id"],
            ["users.id"],
            name=op.f("fk_establishments_owner_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_establishments")),
        sa.UniqueConstraint("qr_code", name=op.f("uq_establishments_qr_code")),
    )
    op.create_index(
        "idx_establishments_qr_code", "establishments", ["qr_code"], unique=False
    )
    op.create_table(
        "reports",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("type", sa.String(length=100), nullable=False),
        sa.Column("format", sa.String(length=10), nullable=False),
        sa.Column("parameters", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("file_path", sa.String(length=500), nullable=True),
        sa.Column("generated_by", sa.BigInteger(), nullable=False),
        sa.Column("generated_at", sa.DateTime(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["generated_by"], ["users.id"], name=op.f("fk_reports_generated_by_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_reports")),
    )
    op.create_table(
        "settings",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("key", sa.String(length=255), nullable=False),
        sa.Column("value", sa.Text(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("updated_by", sa.BigInteger(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["updated_by"], ["users.id"], name=op.f("fk_settings_updated_by_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_settings")),
        sa.UniqueConstraint("key", name=op.f("uq_settings_key")),
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("establishment_id", sa.BigInteger(), nullable=True),
        sa.Column("amount", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "PAYMENT",
                "REFUND",
                "BALANCE_TOP_UP",
                "BALANCE_ADJUSTMENT",
                name="transactiontype",
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "COMPLETED", "FAILED", "CANCELLED", name="transactionstatus"
            ),
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "receipt_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("created_by", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"], ["users.id"], name=op.f("fk_transactions_created_by_users")
        ),
        sa.ForeignKeyConstraint(
            ["establishment_id"],
            ["establishments.id"],
            name=op.f("fk_transactions_establishment_id_establishments"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_transactions_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_transactions")),
    )
    op.create_index(
        "idx_transactions_created_at", "transactions", ["created_at"], unique=False
    )
    op.create_index(
        "idx_transactions_establishment_id",
        "transactions",
        ["establishment_id"],
        unique=False,
    )
    op.create_index(
        "idx_transactions_type_status", "transactions", ["type", "status"], unique=False
    )
    op.create_index(
        "idx_transactions_user_id", "transactions", ["user_id"], unique=False
    )
    op.create_table(
        "balance_history",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("amount_change", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("balance_before", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("balance_after", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_by", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
            name=op.f("fk_balance_history_created_by_users"),
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
            name=op.f("fk_balance_history_transaction_id_transactions"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_balance_history_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_balance_history")),
    )
    op.create_index(
        "idx_balance_history_created_at",
        "balance_history",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        "idx_balance_history_user_id", "balance_history", ["user_id"], unique=False
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("recipient_id", sa.BigInteger(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("is_read", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recipient_id"],
            ["users.id"],
            name=op.f("fk_notifications_recipient_id_users"),
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
            name=op.f("fk_notifications_transaction_id_transactions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_notifications")),
    )
    op.create_index(
        "idx_notifications_read", "notifications", ["is_read"], unique=False
    )
    op.create_index(
        "idx_notifications_recipient", "notifications", ["recipient_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_notifications_recipient", table_name="notifications")
    op.drop_index("idx_notifications_read", table_name="notifications")
    op.drop_table("notifications")
    op.drop_index("idx_balance_history_user_id", table_name="balance_history")
    op.drop_index("idx_balance_history_created_at", table_name="balance_history")
    op.drop_table("balance_history")
    op.drop_index("idx_transactions_user_id", table_name="transactions")
    op.drop_index("idx_transactions_type_status", table_name="transactions")
    op.drop_index("idx_transactions_establishment_id", table_name="transactions")
    op.drop_index("idx_transactions_created_at", table_name="transactions")
    op.drop_table("transactions")
    op.drop_table("settings")
    op.drop_table("reports")
    op.drop_index("idx_establishments_qr_code", table_name="establishments")
    op.drop_table("establishments")
    op.drop_index("idx_users_telegram_id", table_name="users")
    op.drop_index("idx_users_role", table_name="users")
    op.drop_index("idx_users_department", table_name="users")
    op.drop_table("users")
    op.drop_table("departments")
    # ### end Alembic commands ###
