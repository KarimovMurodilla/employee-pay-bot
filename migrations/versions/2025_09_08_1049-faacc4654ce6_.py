"""

Revision ID: faacc4654ce6
Revises: 03943a42c643
Create Date: 2025-09-08 10:49:35.432060

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "faacc4654ce6"
down_revision = "03943a42c643"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_notifications_read", table_name="notifications")
    op.drop_index("idx_notifications_recipient", table_name="notifications")
    op.drop_table("notifications")
    op.drop_table("reports")
    op.drop_index("idx_balance_history_created_at", table_name="balance_history")
    op.drop_index("idx_balance_history_user_id", table_name="balance_history")
    op.drop_table("balance_history")
    op.drop_table("settings")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "settings",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("key", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"], ["users.id"], name="fk_settings_updated_by_users"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_settings"),
        sa.UniqueConstraint("key", name="uq_settings_key"),
    )
    op.create_table(
        "balance_history",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "amount_change",
            sa.NUMERIC(precision=15, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "balance_before",
            sa.NUMERIC(precision=15, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "balance_after",
            sa.NUMERIC(precision=15, scale=2),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["users.id"], name="fk_balance_history_created_by_users"
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
            name="fk_balance_history_transaction_id_transactions",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="fk_balance_history_user_id_users"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_balance_history"),
    )
    op.create_index(
        "idx_balance_history_user_id", "balance_history", ["user_id"], unique=False
    )
    op.create_index(
        "idx_balance_history_created_at",
        "balance_history",
        ["created_at"],
        unique=False,
    )
    op.create_table(
        "reports",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("type", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("format", sa.VARCHAR(length=10), autoincrement=False, nullable=False),
        sa.Column(
            "parameters",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "file_path", sa.VARCHAR(length=500), autoincrement=False, nullable=True
        ),
        sa.Column("generated_by", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "generated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["generated_by"], ["users.id"], name="fk_reports_generated_by_users"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_reports"),
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("recipient_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("title", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("message", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_read", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["recipient_id"], ["users.id"], name="fk_notifications_recipient_id_users"
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
            name="fk_notifications_transaction_id_transactions",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_notifications"),
    )
    op.create_index(
        "idx_notifications_recipient", "notifications", ["recipient_id"], unique=False
    )
    op.create_index(
        "idx_notifications_read", "notifications", ["is_read"], unique=False
    )
    # ### end Alembic commands ###
